name: CD

on: push

env:
  NODE_VERSION: '18.13'
  ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
  NPM_REGISTRY_URL: 'https://registry.npmjs.org/'
  PNPM_VERSION: 8.6
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  check_valid_commit:
    if: "!contains(github.event.head_commit.message, 'ver: ')"
    runs-on: ubuntu-latest
    steps:
      - name: Check branch
        run: exit 0

  pushed_dev_branch:
    needs: check_valid_commit
    if: startsWith(github.ref, 'refs/heads/dev/')
    runs-on: ubuntu-latest
    steps:
      - name: Check branch
        run: exit 0

  pushed_main_branch:
    needs: check_valid_commit
    if: startsWith(github.ref, 'refs/heads/main')
    runs-on: ubuntu-latest
    steps:
      - name: Check branch
        run: exit 0

  update:
    needs: ['pushed_main_branch']
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: ${{ env.NPM_REGISTRY_URL }}

      - name: Regist author
        run: git config --global user.email "leehyeokjae97@gmail.com" && git config --global user.name "HyeokjaeLee"

      - name: Pull branch
        run: git pull

      - name: Set new patch version
        if: "!contains(github.event.head_commit.message, '+m')"
        run: "npm version patch -m 'ver: %s'"

      - name: Set new minor version
        if: "contains(github.event.head_commit.message, '+minor')"
        run: "npm version minor -m 'ver: %s'"

      - name: Set new major version
        if: "contains(github.event.head_commit.message, '+major')"
        run: "npm version major -m 'ver: %s'"

      - name: Push release branch
        run: git push

  tag:
    needs: update
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Pull branch
        run: git pull

      - name: Get version
        id: get-version
        uses: beaconbrigade/package-json-version@v0.3
        with:
          path: .

      - name: Create release & tag
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.get-version.outputs.version }}
          release_name: ${{ steps.get-version.outputs.version }}

  deploy:
    needs: update
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: ${{ env.NPM_REGISTRY_URL }}

      - name: Pull branch
        run: git pull

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: true

      - name: Build library
        run: pnpm build:lib

      - name: Build document
        run: pnpm build:doc

      - name: Deploy library
        run: pnpm run deploy:lib
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Deploy document
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.ACCESS_TOKEN }}
          publish_dir: ./dist/document

  create_new_dev_branch:
    needs: deploy
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Pull release branch
        run: git pull

      - name: Get version
        id: get-version
        uses: beaconbrigade/package-json-version@v0.3
        with:
          path: .

      - name: Create dev/${{ steps.get-version.outputs.version }} branch
        run: git checkout -b dev/${{ steps.get-version.outputs.version }} && git push origin dev/${{ steps.get-version.outputs.version }}

  deploy_canary:
    if: "!contains(github.event.head_commit.message, '-canary')"
    needs: ['pushed_dev_branch']
    runs-on: ubuntu-latest
    steps:
      - name: Set node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: ${{ env.NPM_REGISTRY_URL }}

      - uses: actions/checkout@v3
        with:
          token: ${{secrets.ACCESS_TOKEN}}

      - name: Regist author
        run: git config --global user.email "leehyeokjae97@gmail.com" && git config --global user.name "HyeokjaeLee"

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: true

      - name: Set canary version
        run: pnpm run version:canary

      - name: Get version
        id: get-version
        uses: beaconbrigade/package-json-version@v0.3
        with:
          path: .

      - name: Create release & tag
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.get-version.outputs.version }}
          release_name: ${{ steps.get-version.outputs.version }}

      - name: Build library
        run: pnpm run build:lib

      - name: Deploy package(canary)
        run: pnpm run deploy:lib-canary
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
