{"version":3,"file":"index.stories-ba24e098.js","sources":["../../../src/components/organisms/Drawer/DrawerHeader.tsx","../../../src/components/organisms/Drawer/index.tsx"],"sourcesContent":["import { X } from 'react-feather';\n\nimport { Button } from '@components/molecules';\nimport { useModalContext } from '@contexts/ModalContext';\nimport { HTMLTagProps } from '@types';\nimport { cleanClassName } from '@utils';\n\nimport styles from './DrawerHeader.module.scss';\n\nexport interface DrawerHeaderProps extends HTMLTagProps<'header'> {\n  closeButton?: boolean;\n}\n\nexport const DrawerHeader = ({\n  //* Drawer.Header props\n  closeButton = false,\n\n  //* HTML header props\n  className,\n  children,\n  ...restHeaderProps\n}: DrawerHeaderProps) => {\n  const { onClose } = useModalContext();\n\n  return (\n    <header\n      {...restHeaderProps}\n      className={cleanClassName(`${styles.header} ${className}`)}\n    >\n      <div>{children}</div>\n      {closeButton ? (\n        <Button size=\"small\" theme=\"clear\" onClick={onClose} icon={<X />} />\n      ) : null}\n    </header>\n  );\n};\n","import { createPortal } from 'react-dom';\n\nimport { ModalContextProvider } from '@contexts/ModalContext';\nimport {\n  usePreventBackgroundScroll,\n  useDarkMode,\n  useModalClosing,\n  MODAL_CLOSING_STATE,\n} from '@hooks';\nimport { cleanClassName } from '@utils';\n\nimport { DrawerHeader } from './DrawerHeader';\nimport styles from './index.module.scss';\n\nimport type { ModalProps } from '../Modal/index';\n\nexport type { DrawerHeaderProps } from './DrawerHeader';\n\nexport interface DrawerProps extends ModalProps {\n  drawerDirection?: 'bottom' | 'top' | 'left' | 'right';\n}\n\nexport const Drawer = Object.assign(\n  ({\n    //* Drawer props\n    zIndex = 100,\n    blurredBackground = true,\n    opened = false,\n    onClose,\n    backgroundScroll = false,\n    drawerDirection = 'right',\n    fixedDarkMode,\n\n    //* HTML article props\n    className,\n    children,\n    ...restArticleProps\n  }: DrawerProps) => {\n    const openingTransition = useModalClosing({\n      opened,\n      closingDuration: 200,\n    });\n\n    usePreventBackgroundScroll({\n      backgroundScroll,\n      isPrevent: !!openingTransition,\n    });\n\n    const closingClassName =\n      openingTransition === MODAL_CLOSING_STATE.CLOSING && styles.closing;\n\n    const { isDarkMode } = useDarkMode(fixedDarkMode);\n\n    return openingTransition ? (\n      createPortal(\n        <div\n          style={{\n            zIndex,\n          }}\n          className={`${styles['drawer-container']} ${styles[drawerDirection]}`}\n        >\n          <div\n            className={cleanClassName(\n              `${styles['background-layer']} ${\n                blurredBackground && styles.blurred\n              } ${closingClassName} ${drawerDirection}`,\n            )}\n            onClick={onClose}\n          />\n          <article\n            {...restArticleProps}\n            className={cleanClassName(\n              `${styles.drawer} ${styles[drawerDirection]} ${\n                isDarkMode && styles.dark\n              } ${closingClassName} ${className}`,\n            )}\n          >\n            <ModalContextProvider onClose={onClose}>\n              {children}\n            </ModalContextProvider>\n          </article>\n        </div>,\n        document.body,\n      )\n    ) : (\n      <></>\n    );\n  },\n  {\n    Header: DrawerHeader,\n  },\n);\n"],"names":["DrawerHeader","closeButton","className","children","restHeaderProps","onClose","useModalContext","jsxs","cleanClassName","styles","jsx","Button","X","Drawer","zIndex","blurredBackground","opened","backgroundScroll","drawerDirection","fixedDarkMode","restArticleProps","openingTransition","useModalClosing","usePreventBackgroundScroll","closingClassName","MODAL_CLOSING_STATE","isDarkMode","useDarkMode","createPortal","ModalContextProvider","Fragment"],"mappings":"gkDAaOA,EAAA,CAAA,CAAsB,YAAAC,EAAA,GAEb,UAAAC,EAGd,SAAAC,EACA,GAAAC,CAEF,IAAA,CACE,KAAA,CAAA,QAAAC,GAAAC,IAEA,OAAAC,EAAA,KACE,SAAC,CAAA,GAAAH,EACK,UAAAI,EAAA,GAAAC,EAAA,MAAA,IAAAP,CAAA,EAAA,EACqD,SAAA,CAEzDQ,MAAA,MAAA,CAAA,SAAAP,EAAA,EAAeF,EAAAS,EAAA,IAAAC,EAAA,CAAA,KAAA,QAAA,MAAA,QAAA,QAAAN,EAAA,KAAAK,EAAA,IAAAE,EAAA,CAAA,CAAA,CAAA,CAAA,EAAA,IAGX,CAAA,CAAA,CAGV,giDCbOC,EAAA,OAAA,OAAsB,CAAA,CAC1B,OAAAC,EAAA,IAEU,kBAAAC,EAAA,GACW,OAAAC,EAAA,GACX,QAAAX,EACT,iBAAAY,EAAA,GACmB,gBAAAC,EAAA,QACD,cAAAC,EAClB,UAAAjB,EAGA,SAAAC,EACA,GAAAiB,CACG,IAAA,CAEH,MAAAC,EAAAC,EAAA,CAA0C,OAAAN,EACxC,gBAAA,GACiB,CAAA,EAGnBO,EAAA,CAA2B,iBAAAN,EACzB,UAAA,CAAA,CAAAI,CACa,CAAA,EAGf,MAAAG,EAAAH,IAAAI,EAAA,SAAAhB,EAAA,QAGA,CAAA,WAAAiB,CAAA,EAAAC,EAAAR,CAAA,EAEA,OAAAE,EAAAO,EAAA,aACErB,EAAA,KACE,MAAC,CAAA,MAAA,CACQ,OAAAO,CACL,EACF,UAAA,GAAAL,EAAA,kBAAA,CAAA,IAAAA,EAAAS,CAAA,CAAA,GACmE,SAAA,CAEnER,EAAA,IAAA,MAAC,CAAA,UAAAF,EACY,GAAAC,EAAA,kBAAA,CAAA,IAAAM,GAAAN,EAAA,OAAA,IAAAe,CAAA,IAAAN,CAAA,EAG8B,EACzC,QAAAb,CACS,CAAA,EACXK,EAAA,IACA,UAAC,CAAA,GAAAU,EACK,UAAAZ,EACO,GAAAC,EAAA,MAAA,IAAAA,EAAAS,CAAA,CAAA,IAAAQ,GAAAjB,EAAA,IAAA,IAAAe,CAAA,IAAAtB,CAAA,EAGwB,EACnC,SAAAQ,EAAAA,IAAAmB,EAAA,CAAA,QAAAxB,EAAA,SAAAF,CAAA,CAAA,CAIA,CAAA,CACF,CAAA,CAAA,EACF,SAAA,IACS,EAAAO,EAAA,IAAAoB,WAAA,CAAA,CAAA,CAGT,EAEN,CACA,OAAA9B,CACU,CAEZ;;;;;;;;;;;;;;;;;;;;;;;"}