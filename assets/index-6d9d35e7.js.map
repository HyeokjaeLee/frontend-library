{"version":3,"file":"index-6d9d35e7.js","sources":["../../../node_modules/.pnpm/react-feather@2.0.10_react@18.2.0/node_modules/react-feather/dist/icons/check.js","../../../src/components/atoms/Select/index.tsx"],"sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Check = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"20 6 9 17 4 12\"\n  }));\n});\nCheck.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nCheck.displayName = 'Check';\nexport default Check;","import { useRef } from 'react';\nimport { Check } from 'react-feather';\n\nimport {\n  useDarkMode,\n  useIndexForSelect,\n  useOpeningTransitionState,\n  OPENING_TRANSITION,\n  useMountedEffect,\n} from '@hooks';\nimport type { ValidOptionValue } from '@hooks';\nimport { HTMLTagProps } from '@types';\nimport { cleanClassName } from '@utils';\n\nimport styles from './index.module.scss';\n\nexport type SelectProps<\n  OptionValue extends ValidOptionValue = ValidOptionValue,\n  Multiple extends boolean = false,\n> = Omit<HTMLTagProps<'section'>, 'value' | 'onChange' | 'onKeyDown'> & {\n  opened?: boolean;\n  options?: {\n    label: string;\n    value: OptionValue;\n  }[];\n  multiple?: Multiple;\n  value?: Multiple extends true ? OptionValue[] : OptionValue;\n  onChange?: (value: SelectProps<OptionValue, Multiple>['value']) => void;\n  onKeyDown?: (event: KeyboardEvent) => void;\n  float?: 'top' | 'bottom';\n  cancelable?: boolean;\n};\n\nexport const Select = <\n  OptionValue extends ValidOptionValue = ValidOptionValue,\n  Multiple extends boolean = false,\n>({\n  //* Select props\n  opened = false,\n  options,\n  multiple = false as Multiple,\n  value: selectedValue,\n  onChange,\n  onKeyDown,\n  float = 'bottom',\n  cancelable = true,\n\n  //* HTML section props\n  className,\n  ...restSectionProps\n}: SelectProps<OptionValue, Multiple>) => {\n  const [openingTransition, setOpeningTransition] = useOpeningTransitionState({\n    openingTransition:\n      opened === true ? OPENING_TRANSITION.OPENED : OPENING_TRANSITION.CLOSED,\n    openingDuration: 200,\n    closingDuration: 200,\n  });\n\n  useMountedEffect(\n    () => setOpeningTransition(opened),\n    [opened, setOpeningTransition],\n  );\n\n  const { isDarkMode } = useDarkMode();\n\n  const selectRefs = useRef<(HTMLButtonElement | null)[]>([]);\n\n  const [indexForSelect, setIndexForSelect] = useIndexForSelect({\n    openingTransition,\n    options,\n    selectRefs,\n    onKeyDown,\n  });\n\n  return openingTransition && options?.length ? (\n    <section\n      {...restSectionProps}\n      className={cleanClassName(\n        `${styles.select} ${isDarkMode && styles.dark} ${styles[float]} ${\n          openingTransition === OPENING_TRANSITION.CLOSING && styles.closing\n        } ${\n          openingTransition === OPENING_TRANSITION.OPENING && styles.opening\n        } ${className}`,\n      )}\n    >\n      <ul className={cleanClassName(styles['select-container'])}>\n        {options?.map(({ label, value }, index) => {\n          const isHovered = index === indexForSelect;\n          const isSelected = (() => {\n            if (selectedValue === undefined) return false;\n\n            if (multiple && selectedValue instanceof Array)\n              return selectedValue.includes(value);\n\n            return selectedValue === value;\n          })();\n\n          return (\n            <li key={index} className={styles['select-wrap']}>\n              <button\n                name=\"select-option-item\"\n                type=\"button\"\n                ref={(element) => {\n                  selectRefs.current[index] = element;\n                }}\n                className={cleanClassName(\n                  `${styles['select-option-item']} ${\n                    isHovered && styles.hovered\n                  }`,\n                )}\n                onClick={() => {\n                  if (multiple) {\n                    let valuesForSelect = (selectedValue ??\n                      []) as OptionValue[];\n\n                    const handleChange = onChange as\n                      | ((values: OptionValue[]) => void)\n                      | undefined;\n\n                    if (cancelable) {\n                      valuesForSelect = isSelected\n                        ? valuesForSelect.filter(\n                            (selectedValue) => selectedValue !== value,\n                          )\n                        : [...valuesForSelect, value];\n                    }\n\n                    handleChange?.(valuesForSelect);\n                  } else {\n                    const handleChange = onChange as\n                      | ((value?: OptionValue) => void)\n                      | undefined;\n\n                    handleChange?.(\n                      isSelected && cancelable ? undefined : value,\n                    );\n                  }\n                }}\n                onMouseEnter={() => {\n                  setIndexForSelect(index);\n                }}\n              >\n                <div>{label}</div>\n                <div\n                  className={cleanClassName(\n                    `${styles['icon-wrap']} ${isSelected && styles.show}`,\n                  )}\n                >\n                  {<Check size=\"1em\" />}\n                </div>\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n    </section>\n  ) : (\n    <></>\n  );\n};\n"],"names":["_extends","target","i","source","key","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","sourceSymbolKeys","sourceKeys","Check","forwardRef","_ref","ref","_ref$color","color","_ref$size","size","rest","React","PropTypes","Check$1","Select","opened","options","multiple","selectedValue","onChange","onKeyDown","float","cancelable","className","restSectionProps","openingTransition","setOpeningTransition","useOpeningTransitionState","OPENING_TRANSITION","useMountedEffect","isDarkMode","useDarkMode","selectRefs","useRef","indexForSelect","setIndexForSelect","useIndexForSelect","jsx","cleanClassName","styles","label","value","index","isHovered","isSelected","jsxs","element","valuesForSelect","handleChange","selectedValue2","Fragment"],"mappings":"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","x_google_ignoreList":[0]}