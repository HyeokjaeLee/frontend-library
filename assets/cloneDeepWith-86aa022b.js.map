{"version":3,"file":"cloneDeepWith-86aa022b.js","sources":["../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/cloneDeep.js","../../../src/utils/cloneDeepWith.ts"],"sourcesContent":["import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nexport default cloneDeep;\n","import { cloneDeep } from 'lodash-es';\n\n/** lodash의 cloneDeepWith이 내부의 값 수정이 외부에 영향을 미치는 문제가 있엇서 이를 해결하기 위해 만든 함수 */\nexport const cloneDeepWith = <TOriginalValue, TCustomizerReturn>(\n  value: TOriginalValue,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  customizer: (value: any) => TCustomizerReturn,\n) => {\n  const newValue = cloneDeep(value);\n  return customizer(newValue);\n};\n"],"names":["CLONE_DEEP_FLAG","CLONE_SYMBOLS_FLAG","cloneDeep","value","baseClone","cloneDeepWith","customizer","newValue"],"mappings":"6CAGA,IAAIA,EAAkB,EAClBC,EAAqB,EAoBzB,SAASC,EAAUC,EAAO,CACxB,OAAOC,EAAUD,EAAOH,EAAkBC,CAAkB,CAC9D,CCvBa,MAAAI,EAAgB,CAC3BF,EAEAG,IACG,CACG,MAAAC,EAAWL,EAAUC,CAAK,EAChC,OAAOG,EAAWC,CAAQ,CAC5B","x_google_ignoreList":[0]}