{"version":3,"file":"index-28978999.js","sources":["../../../src/hooks/private/useTextareaDynamicHeight.tsx","../../../src/components/molecules/Textarea/index.tsx"],"sourcesContent":["import { useRef } from 'react';\n\nexport const useTextareaDynamicHeight = () => {\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\n\n  const { current: textareaElement } = textareaRef;\n\n  if (textareaElement)\n    textareaElement.style.height = `${textareaElement.scrollHeight}px`;\n\n  const handleTextareaHeight = (target: EventTarget & HTMLTextAreaElement) => {\n    const { style } = target;\n    style.height = 'auto';\n    style.height = `${target.scrollHeight}px`;\n  };\n\n  return {\n    textareaRef,\n    handleTextareaHeight,\n  };\n};\n","import { Input } from '@components/atoms';\nimport type { InputWrapProps } from '@components/atoms';\nimport {\n  useSubscribedState,\n  useTextareaDynamicHeight,\n  useValidationMessage,\n} from '@hooks';\nimport type { ValidateHandler } from '@hooks';\nimport type { HTMLTagProps, InnerStateChangeEventHandler, Size } from '@types';\nimport { cleanClassName } from '@utils';\n\nimport styles from './index.module.scss';\n\ninterface TextareaProps\n  extends Pick<InputWrapProps, 'className' | 'style' | 'label' | 'reversed'>,\n    Omit<\n      HTMLTagProps<'textarea'>,\n      'resize' | 'className' | 'style' | 'rows' | 'onChange'\n    > {\n  size?: Size;\n  value?: string;\n  onChange?: InnerStateChangeEventHandler<string>;\n  children?: React.ReactNode;\n  validation?: ValidateHandler<TextareaProps['value']>;\n}\n\nexport const Textarea = ({\n  //* Textarea props\n  size = 'medium',\n  value,\n  onChange,\n  children,\n  validation,\n\n  //* InputWrap props\n  className,\n  style,\n  label,\n  reversed,\n\n  //* HTML textarea props\n  onInvalid,\n  ...restTextareaProps\n}: TextareaProps) => {\n  const { textareaRef, handleTextareaHeight } = useTextareaDynamicHeight();\n  const [textareaValue, setTextareaValue, preventInnerStateChange] =\n    useSubscribedState(value);\n\n  const { required, id } = restTextareaProps;\n\n  const { validationMessage, validateOnChange } = useValidationMessage({\n    validateHandler: validation,\n    value: textareaValue,\n    key: id,\n  });\n\n  return (\n    <Input.Wrap\n      size=\"fit-content\"\n      className={className}\n      style={style}\n      validationMessage={validationMessage}\n      label={label}\n      required={required}\n    >\n      <div\n        className={cleanClassName(\n          `${styles['textarea-wrap']} ${styles[`size-${size}`]} ${\n            reversed && styles.reversed\n          }`,\n        )}\n      >\n        <textarea\n          {...restTextareaProps}\n          value={textareaValue}\n          rows={1}\n          className={styles.textarea}\n          required={required}\n          ref={textareaRef}\n          onChange={({ target }) => {\n            const { value } = target;\n            onChange?.({\n              value,\n              preventInnerStateChange,\n            });\n            setTextareaValue(value);\n            validateOnChange?.(value);\n            handleTextareaHeight(target);\n          }}\n          onInvalid={(e) => {\n            e.preventDefault();\n            onInvalid?.(e);\n          }}\n        />\n        {children ? <div className={styles.decoration}>{children}</div> : null}\n      </div>\n    </Input.Wrap>\n  );\n};\n"],"names":["useTextareaDynamicHeight","textareaRef","useRef","textareaElement","target","style","Textarea","size","value","onChange","children","validation","className","label","reversed","onInvalid","restTextareaProps","handleTextareaHeight","textareaValue","setTextareaValue","preventInnerStateChange","useSubscribedState","required","id","validationMessage","validateOnChange","useValidationMessage","jsx","Input","jsxs","cleanClassName","styles","value2","e"],"mappings":"wLAEO,MAAMA,EAA2B,IAAM,CACtC,MAAAC,EAAcC,SAA4B,IAAI,EAE9C,CAAE,QAASC,CAAoB,EAAAF,EAEjC,OAAAE,IACFA,EAAgB,MAAM,OAAS,GAAGA,EAAgB,YAAY,MAQzD,CACL,YAAAF,EACA,qBAR4BG,GAA8C,CACpE,KAAA,CAAE,MAAAC,CAAU,EAAAD,EAClBC,EAAM,OAAS,OACTA,EAAA,OAAS,GAAGD,EAAO,YAAY,IAAA,CAKrC,CAEJ,+qCCMOE,EAAA,CAAA,CAAkB,KAAAC,EAAA,SAEhB,MAAAC,EACP,SAAAC,EACA,SAAAC,EACA,WAAAC,EACA,UAAAC,EAGA,MAAAP,EACA,MAAAQ,EACA,SAAAC,EACA,UAAAC,EAGA,GAAAC,CAEF,IAAA,CACE,KAAA,CAAA,YAAAf,EAAA,qBAAAgB,CAAA,EAAAjB,EAAA,EACA,CAAAkB,EAAAC,EAAAC,CAAA,EAAAC,EAAAb,CAAA,EAGA,CAAA,SAAAc,EAAA,GAAAC,CAAA,EAAAP,EAEA,CAAA,kBAAAQ,EAAA,iBAAAC,CAAA,EAAAC,EAAA,CAAqE,gBAAAf,EAClD,MAAAO,EACV,IAAAK,CACF,CAAA,EAGP,OAAAI,EAAA,IACEC,EAAA,KAAO,CAAN,KAAA,cACM,UAAAhB,EACL,MAAAP,EACA,kBAAAmB,EACA,MAAAX,EACA,SAAAS,EACA,SAAAO,EAAA,KAEA,MAAC,CAAA,UAAAC,EACY,GAAAC,EAAA,eAAA,CAAA,IAAAA,EAAA,QAAAxB,CAAA,EAAA,CAAA,IAAAO,GAAAiB,EAAA,QAAA,EAGT,EACF,SAAA,CAEAJ,EAAA,IAAA,WAAC,CAAA,GAAAX,EACK,MAAAE,EACG,KAAA,EACD,UAAAa,EAAA,SACY,SAAAT,EAClB,IAAArB,EACK,SAAA,CAAA,CAAA,OAAAG,KAAA,CAEH,KAAA,CAAA,MAAA4B,CAAA,EAAA5B,EACAK,GAAA,MAAAA,EAAA,CAAW,MAAAuB,EACT,wBAAAZ,CACA,GAEFD,EAAAa,CAAA,EACAP,GAAA,MAAAA,EAAAO,GACAf,EAAAb,CAAA,CAA2B,EAC7B,UAAA6B,GAAA,CAEEA,EAAA,eAAA,EACAlB,GAAA,MAAAA,EAAAkB,EAAa,CACf,CAAA,EACFvB,EAAAiB,EAAAA,IAAA,MAAA,CAAA,UAAAI,EAAA,WAAA,SAAArB,CAAA,CAAA,EAAA,IACkE,CAAA,CAAA,CACpE,CAAA,CAGN"}