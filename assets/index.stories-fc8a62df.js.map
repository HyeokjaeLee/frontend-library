{"version":3,"file":"index.stories-fc8a62df.js","sources":["../../../src/contexts/TabContext.tsx","../../../src/hooks/private/useTabOverflowX.tsx","../../../src/components/organisms/Tab/TabItem.tsx","../../../src/components/organisms/Tab/index.tsx"],"sourcesContent":["import { createContext, useContext } from 'react';\n\nimport type { ButtonProps } from '@components/molecules';\n\nconst TabContext = createContext<ButtonProps['size']>(undefined);\n\ninterface TabContextProviderProps extends Pick<ButtonProps, 'size'> {\n  children: React.ReactNode;\n}\n\nexport const TabContextProvider = ({\n  size,\n  children,\n}: TabContextProviderProps) => (\n  <TabContext.Provider value={size}>{children}</TabContext.Provider>\n);\n\nexport const useTabContext = () => {\n  const size = useContext(TabContext);\n  return { size };\n};\n","import { useEffect, useRef, useState } from 'react';\n\nexport const useTabOverflowX = () => {\n  const [isOverflowX, setIsOverflowX] = useState(false);\n  const ref = useRef<HTMLUListElement>(null);\n\n  useEffect(() => {\n    const uListElement = ref.current;\n    if (uListElement)\n      setIsOverflowX(uListElement.scrollWidth > uListElement.clientWidth);\n  }, []);\n\n  return { isOverflowX, ref };\n};\n","import { Button } from '@components/molecules';\nimport type { ButtonProps } from '@components/molecules';\nimport { useTabContext } from '@contexts/TabContext';\nimport { HTMLTagProps } from '@types';\nimport { cleanClassName } from '@utils';\n\nimport styles from './TabItem.module.scss';\n\nexport interface TabItemProps\n  extends Omit<HTMLTagProps<'li'>, 'children' | 'onClick'>,\n    Pick<\n      ButtonProps,\n      'disabled' | 'children' | 'onClick' | 'icon' | 'iconDirection'\n    > {\n  active?: boolean;\n}\n\nexport const TabItem = ({\n  //* TabItem props\n  active = false,\n\n  //* Button props\n  children,\n  disabled,\n  onClick,\n  icon,\n  iconDirection,\n\n  //* HTML li props\n  className,\n  ...restLiProps\n}: TabItemProps) => {\n  const { size } = useTabContext();\n  return (\n    <li\n      {...restLiProps}\n      className={cleanClassName(\n        `${styles['tab-item']} ${\n          active && styles['tab-item-active']\n        } ${className}`,\n      )}\n    >\n      <Button\n        disabled={disabled}\n        size={size}\n        onClick={onClick}\n        theme=\"clear\"\n        className={styles['item-content']}\n        icon={icon}\n        iconDirection={iconDirection}\n      >\n        {children}\n      </Button>\n    </li>\n  );\n};\n","import type { ButtonProps } from '@components/molecules';\nimport { TabContextProvider } from '@contexts/TabContext';\nimport { useDarkMode, useTabOverflowX } from '@hooks';\nimport { HTMLTagProps } from '@types';\nimport { cleanClassName } from '@utils';\n\nimport { TabItem } from './TabItem';\nimport styles from './index.module.scss';\n\nexport type { TabItemProps } from './TabItem';\n\nexport type TabProps = Omit<HTMLTagProps<'ul'>, 'size' | 'ref'> &\n  Pick<ButtonProps, 'size'>;\n\nexport const Tab = Object.assign(\n  ({\n    //* Button props\n    size,\n\n    //* HTML ul props\n    className,\n    children,\n    ...restUlProps\n  }: TabProps) => {\n    const { isOverflowX, ref } = useTabOverflowX();\n\n    const { isDarkMode } = useDarkMode();\n\n    return (\n      <ul\n        {...restUlProps}\n        ref={ref}\n        className={cleanClassName(\n          `${styles.tab} ${\n            isOverflowX && styles[`overflow-${isDarkMode ? 'dark' : 'light'}`]\n          } ${className}`,\n        )}\n      >\n        <TabContextProvider size={size}>{children}</TabContextProvider>\n      </ul>\n    );\n  },\n  {\n    Item: TabItem,\n  },\n);\n"],"names":["TabContext","createContext","TabContextProvider","size","children","jsx","useTabContext","useContext","useTabOverflowX","isOverflowX","setIsOverflowX","useState","ref","useRef","useEffect","uListElement","TabItem","active","disabled","onClick","icon","iconDirection","className","restLiProps","cleanClassName","styles","Button","Tab","restUlProps","isDarkMode","useDarkMode"],"mappings":"8cAIA,MAAAA,EAAAC,EAAAA,cAAA,MAAA,EAMOC,EAAA,CAAA,CAA4B,KAAAC,EACjC,SAAAC,CAEF,IAAAC,EAAAA,IAAAL,EAAA,SAAA,CAAA,MAAAG,EAAA,SAAAC,CAAA,CAAA,EAIOE,EAAA,KAEL,CAAA,KADAC,aAAAP,CAAA,CACA,4QCjBK,MAAMQ,EAAkB,IAAM,CACnC,KAAM,CAACC,EAAaC,CAAc,EAAIC,WAAS,EAAK,EAC9CC,EAAMC,SAAyB,IAAI,EAEzCC,OAAAA,EAAAA,UAAU,IAAM,CACd,MAAMC,EAAeH,EAAI,QACrBG,GACaL,EAAAK,EAAa,YAAcA,EAAa,WAAW,CACtE,EAAG,CAAE,CAAA,EAEE,CAAE,YAAAN,EAAa,IAAAG,EACxB,+hCCIOI,EAAA,CAAA,CAAiB,OAAAC,EAAA,GAEb,SAAAb,EAGT,SAAAc,EACA,QAAAC,EACA,KAAAC,EACA,cAAAC,EACA,UAAAC,EAGA,GAAAC,CAEF,IAAA,CACE,KAAA,CAAA,KAAApB,GAAAG,IACA,OAAAD,EAAA,IACE,KAAC,CAAA,GAAAkB,EACK,UAAAC,EACO,GAAAC,EAAA,UAAA,CAAA,IAAAR,GAAAQ,EAAA,iBAAA,CAAA,IAAAH,CAAA,EAGI,EACf,SAAAjB,EAAA,IAEAqB,EAAC,CAAA,SAAAR,EACC,KAAAf,EACA,QAAAgB,EACA,MAAA,QACM,UAAAM,EAAA,cAAA,EAC0B,KAAAL,EAChC,cAAAC,EACA,SAAAjB,CAEC,CAAA,CACH,CAAA,CAGN,28CCzCOuB,EAAA,OAAA,OAAmB,CAAA,CACvB,KAAAxB,EAEC,UAAAmB,EAGA,SAAAlB,EACA,GAAAwB,CACG,IAAA,CAEH,KAAA,CAAA,YAAAnB,EAAA,IAAAG,CAAA,EAAAJ,EAAA,EAEA,CAAA,WAAAqB,GAAAC,IAEA,OAAAzB,EAAA,IACE,KAAC,CAAA,GAAAuB,EACK,IAAAhB,EACJ,UAAAY,EACW,GAAAC,EAAA,GAAA,IAAAhB,GAAAgB,EAAA,YAAAI,EAAA,OAAA,OAAA,EAAA,CAAA,IAAAP,CAAA,EAGI,EACf,SAAAjB,EAAAA,IAAAH,EAAA,CAAA,KAAAC,EAAA,SAAAC,CAAA,CAAA,CAE0C,CAAA,CAC5C,EAEJ,CACA,KAAAY,CACQ,CAEV;;;;;;;;;;"}