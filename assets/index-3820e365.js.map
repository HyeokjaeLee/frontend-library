{"version":3,"file":"index-3820e365.js","sources":["../../../src/contexts/AccordionContext.tsx","../../../src/components/atoms/Accordion/AccordionContents.tsx","../../../node_modules/.pnpm/react-feather@2.0.10_react@18.2.0/node_modules/react-feather/dist/icons/chevron-down.js","../../../src/components/atoms/Accordion/AccordionTitle.tsx","../../../src/components/atoms/Accordion/index.tsx"],"sourcesContent":["import { createContext, useContext, useMemo } from 'react';\nimport type { Dispatch, SetStateAction } from 'react';\n\nimport { useSubscribedState } from '@hooks';\n\ntype Size = 'small' | 'medium' | 'large';\ninterface AccordionContextValue {\n  openedState: [boolean, Dispatch<SetStateAction<boolean>>];\n  size?: Size;\n}\n\nconst AccordionContext = createContext<AccordionContextValue | undefined>(\n  undefined,\n);\n\nexport interface AccordionContextProviderProps {\n  opened?: boolean;\n  size?: Size;\n  children: React.ReactNode;\n}\n\nexport const AccordionContextProvider = ({\n  opened = false,\n  size = 'medium',\n  children,\n}: AccordionContextProviderProps) => {\n  const openedState = useSubscribedState(opened);\n\n  const accordionContextValue = useMemo(\n    () => ({\n      openedState,\n      size,\n    }),\n    [openedState, size],\n  );\n\n  return (\n    <AccordionContext.Provider value={accordionContextValue}>\n      {children}\n    </AccordionContext.Provider>\n  );\n};\n\nexport const useAccordionContext = () => {\n  const context = useContext(AccordionContext);\n\n  if (context === undefined) {\n    throw new Error(\n      'useAccordionContext must be used within a AccordionContextProvider',\n    );\n  }\n\n  return context;\n};\n","import { useRef, useMemo } from 'react';\n\nimport { useAccordionContext } from '@contexts/AccordionContext';\nimport { useDarkMode } from '@hooks';\nimport type { HTMLTagProps } from '@types';\nimport { cleanClassName } from '@utils';\n\nimport styles from './AccordionContents.module.scss';\n\nexport type AccordionContentsProps = Omit<HTMLTagProps<'dd'>, 'style'> & {\n  style?: Omit<React.CSSProperties, 'height'>;\n};\n\nexport const AccordionContents = ({\n  style,\n  children,\n  className,\n  ...restDdProps\n}: AccordionContentsProps) => {\n  const {\n    openedState: [opened],\n    size,\n  } = useAccordionContext();\n  const ref = useRef<HTMLElement>(null);\n\n  const accordianContentsStyle = useMemo(() => {\n    const { current } = ref;\n    if (!current) {\n      return {\n        ...style,\n        height: 0,\n      };\n    }\n    return {\n      ...style,\n      height: opened ? current.scrollHeight : 0,\n    };\n  }, [opened, style]);\n\n  const { isDarkMode } = useDarkMode();\n\n  return (\n    <dd\n      {...restDdProps}\n      className={cleanClassName(\n        `${styles['accordian-contents-wrap']} ${styles[`size-${size}`]}`,\n      )}\n      style={accordianContentsStyle}\n    >\n      <hr\n        className={`${styles.divider} ${isDarkMode && styles.dark} ${\n          opened ? styles.opened : styles.closed\n        }`}\n      />\n      <article\n        ref={ref}\n        className={cleanClassName(\n          `${styles['accordian-contents']} ${opened && styles.opened} ${\n            isDarkMode && styles.dark\n          } ${className}`,\n        )}\n      >\n        {children}\n      </article>\n    </dd>\n  );\n};\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar ChevronDown = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"6 9 12 15 18 9\"\n  }));\n});\nChevronDown.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nChevronDown.displayName = 'ChevronDown';\nexport default ChevronDown;","import { ChevronDown } from 'react-feather';\n\nimport { useAccordionContext } from '@contexts/AccordionContext';\nimport type { HTMLTagProps } from '@types';\nimport { cleanClassName } from '@utils';\n\nimport styles from './AccordionTitle.module.scss';\n\nexport type AccordionTitleProps = HTMLTagProps<'dt'>;\n\nexport const AccordionTitle = ({\n  children,\n  className,\n  ...restDtProps\n}: AccordionTitleProps) => {\n  const {\n    openedState: [opened, setOpened],\n    size,\n  } = useAccordionContext();\n  return (\n    <dt\n      {...restDtProps}\n      className={cleanClassName(\n        `${styles['accordian-title-wrap']} ${className}`,\n      )}\n    >\n      <button\n        type=\"button\"\n        className={`${styles['accordian-title']} ${styles[`size-${size}`]}`}\n        onClick={() => setOpened(() => !opened)}\n      >\n        <div className={styles['title-contents']}>{children}</div>\n        <ChevronDown\n          className={cleanClassName(\n            `${styles['chevron-down-icon']} ${opened && styles.opened}`,\n          )}\n        />\n      </button>\n    </dt>\n  );\n};\n","import { AccordionContextProvider } from '@contexts/AccordionContext';\nimport type { AccordionContextProviderProps } from '@contexts/AccordionContext';\nimport { useDarkMode } from '@hooks';\nimport type { HTMLTagProps } from '@types';\nimport { cleanClassName } from '@utils';\n\nimport { AccordionContents } from './AccordionContents';\nimport { AccordionTitle } from './AccordionTitle';\nimport styles from './index.module.scss';\n\nexport type { AccordionTitleProps } from './AccordionTitle';\nexport type { AccordionContentsProps } from './AccordionContents';\n\nexport type AccordionProps = HTMLTagProps<'dl'> & AccordionContextProviderProps;\n\nexport const Accordion = Object.assign(\n  ({\n    //* Accordion props\n    opened,\n    size = 'medium',\n\n    //* HTML dl props\n    children,\n    className,\n    ...restDlProps\n  }: AccordionProps) => {\n    const { isDarkMode } = useDarkMode();\n\n    return (\n      <dl\n        {...restDlProps}\n        className={cleanClassName(\n          `${styles['accordian-container']} ${\n            isDarkMode && styles.dark\n          } ${className}`,\n        )}\n      >\n        <AccordionContextProvider opened={opened} size={size}>\n          {children}\n        </AccordionContextProvider>\n      </dl>\n    );\n  },\n  {\n    Title: AccordionTitle,\n    Contents: AccordionContents,\n  },\n);\n"],"names":["AccordionContext","createContext","AccordionContextProvider","opened","size","children","openedState","useSubscribedState","accordionContextValue","useMemo","jsx","useAccordionContext","context","useContext","AccordionContents","style","className","restDdProps","ref","useRef","accordianContentsStyle","current","isDarkMode","useDarkMode","jsxs","cleanClassName","styles","_extends","target","source","key","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","i","sourceSymbolKeys","sourceKeys","ChevronDown","forwardRef","_ref","_ref$color","color","_ref$size","rest","React","PropTypes","ChevronDown$1","AccordionTitle","restDtProps","setOpened","Accordion","restDlProps"],"mappings":"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","x_google_ignoreList":[2]}