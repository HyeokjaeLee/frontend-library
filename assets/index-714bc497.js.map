{"version":3,"file":"index-714bc497.js","sources":["../../../src/components/molecules/Textbox/index.tsx"],"sourcesContent":["import type { InputProps, InputWrapProps } from '@components/atoms';\nimport { Input } from '@components/atoms';\nimport { useSubscribedState, useValidationMessage } from '@hooks';\nimport type { ValidateHandler, InputType } from '@hooks';\nimport { InputDisabled, Size } from '@types';\nimport { cleanClassName } from '@utils';\n\nimport styles from './index.module.scss';\n\nexport interface TextboxProps\n  extends Omit<InputProps, 'className' | 'size' | 'style' | 'disabled'>,\n    Pick<InputWrapProps, 'className' | 'style'> {\n  children?: React.ReactNode;\n  type?: Exclude<InputType, 'button'>;\n  size?: Size;\n  validation?: ValidateHandler<TextboxProps['value']>;\n  disabled?: InputDisabled;\n}\n\nexport const Textbox = ({\n  //* Textbox props\n  children,\n  type,\n  size,\n  validation,\n  disabled,\n\n  //* Input.Wrap props\n  className,\n  style,\n\n  //* Input props\n  onChange,\n  value,\n  id,\n  name,\n  ...restInputProps\n}: TextboxProps) => {\n  const [inputValue, setInputValue] = useSubscribedState(value);\n  const { validationMessage, validateValue } = useValidationMessage({\n    validateHandler: validation,\n    value: inputValue,\n    id,\n  });\n\n  return (\n    <Input.Wrap\n      size={size}\n      validationMessage={validationMessage}\n      className={className}\n      style={style}\n      readonly={disabled === 'readonly'}\n    >\n      <Input\n        {...restInputProps}\n        disabled={!!disabled}\n        type={type}\n        value={inputValue}\n        id={id}\n        name={name}\n        onChange={(value) => {\n          setInputValue(value);\n          onChange?.(value);\n          validateValue(value);\n        }}\n      />\n      {children ? (\n        <div className={cleanClassName(`${styles.decoration}`)}>{children}</div>\n      ) : null}\n    </Input.Wrap>\n  );\n};\n"],"names":["Textbox","children","type","size","validation","disabled","className","style","onChange","value","id","name","restInputProps","inputValue","setInputValue","useSubscribedState","validationMessage","validateValue","useValidationMessage","jsxs","Input","jsx","value2","cleanClassName","styles"],"mappings":"k6BAmBOA,EAAA,CAAA,CAAiB,SAAAC,EAEtB,KAAAC,EACA,KAAAC,EACA,WAAAC,EACA,SAAAC,EACA,UAAAC,EAGA,MAAAC,EACA,SAAAC,EAGA,MAAAC,EACA,GAAAC,EACA,KAAAC,EACA,GAAAC,CAEF,IAAA,CACE,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAAN,CAAA,EACA,CAAA,kBAAAO,EAAA,cAAAC,CAAA,EAAAC,EAAA,CAAkE,gBAAAd,EAC/C,MAAAS,EACV,GAAAH,CACP,CAAA,EAGF,OAAAS,EAAA,KACEC,EAAA,KAAO,CAAN,KAAAjB,EACC,kBAAAa,EACA,UAAAV,EACA,MAAAC,EACA,SAAAF,IAAA,WACuB,SAAA,CAEvBgB,EAAA,IAAAD,EAAC,CAAA,GAAAR,EACK,SAAA,CAAA,CAAAP,EACQ,KAAAH,EACZ,MAAAW,EACO,GAAAH,EACP,KAAAC,EACA,SAAAW,GAAA,CAEER,EAAAQ,CAAA,EACAd,GAAA,MAAAA,EAAAc,GACAL,EAAAK,CAAA,CAAmB,CACrB,CAAA,EACFrB,EAAAoB,EAAAA,IAAA,MAAA,CAAA,UAAAE,EAAA,GAAAC,EAAA,YAAA,EAAA,SAAAvB,CAAA,CAAA,EAAA,IAGI,CAAA,CAAA,CAGV"}