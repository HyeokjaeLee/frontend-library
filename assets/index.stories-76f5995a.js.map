{"version":3,"file":"index.stories-76f5995a.js","sources":["../../../src/components/organisms/Modal/ModalHeader.tsx","../../../src/components/organisms/Modal/index.tsx"],"sourcesContent":["import { X } from 'react-feather';\n\nimport { Button } from '@components/molecules';\nimport { useModalContext } from '@contexts/ModalContext';\nimport { HTMLTagProps } from '@types';\nimport { cleanClassName } from '@utils';\n\nimport styles from './ModalHeader.module.scss';\n\nexport interface ModalHeaderProps extends HTMLTagProps<'header'> {\n  closeButton?: boolean;\n}\n\nexport const ModalHeader = ({\n  //* Modal.Header props\n  closeButton = false,\n\n  //* HTML header props\n  className,\n  children,\n  ...restHeaderProps\n}: ModalHeaderProps) => {\n  const { onClose } = useModalContext();\n\n  return (\n    <header\n      {...restHeaderProps}\n      className={cleanClassName(`${styles.header} ${className}`)}\n    >\n      <div>{children}</div>\n      {closeButton ? (\n        <Button size=\"small\" theme=\"clear\" onClick={onClose} icon={<X />} />\n      ) : null}\n    </header>\n  );\n};\n","import { createPortal } from 'react-dom';\n\nimport { ModalContextProvider } from '@contexts/ModalContext';\nimport {\n  MODAL_CLOSING_STATE,\n  usePreventBackgroundScroll,\n  useDarkMode,\n  FixedDarkMode,\n  useModalClosing,\n} from '@hooks';\nimport { HTMLTagProps } from '@types';\nimport { cleanClassName } from '@utils';\n\nimport { ModalHeader } from './ModalHeader';\nimport styles from './index.module.scss';\n\nexport type { ModalHeaderProps } from './ModalHeader';\n\nexport interface ModalProps extends HTMLTagProps<'article'> {\n  zIndex?: number;\n  blurredBackground?: boolean;\n  opened?: boolean;\n  onClose?: () => void;\n  backgroundScroll?: boolean;\n  fixedDarkMode?: FixedDarkMode;\n}\n\nexport const Modal = Object.assign(\n  ({\n    //* Modal props\n    zIndex = 100,\n    blurredBackground = true,\n    opened = false,\n    onClose,\n    backgroundScroll = false,\n    fixedDarkMode,\n\n    //* HTML article props\n    className,\n    children,\n    ...restArticleProps\n  }: ModalProps) => {\n    const openingTransition = useModalClosing({\n      opened,\n      closingDuration: 200,\n    });\n\n    usePreventBackgroundScroll({\n      backgroundScroll,\n      isPrevent: !!openingTransition,\n    });\n\n    const { isDarkMode } = useDarkMode(fixedDarkMode);\n\n    return openingTransition ? (\n      createPortal(\n        <div\n          style={{\n            zIndex,\n          }}\n          className={cleanClassName(\n            `${styles['modal-container']} ${\n              openingTransition === MODAL_CLOSING_STATE.CLOSING &&\n              styles.closing\n            }`,\n          )}\n        >\n          <div\n            className={cleanClassName(\n              `${styles['background-layer']} ${\n                blurredBackground && styles.blurred\n              }`,\n            )}\n            onClick={onClose}\n          />\n          <article\n            {...restArticleProps}\n            className={cleanClassName(\n              `${styles.modal} ${isDarkMode && styles.dark} ${className}`,\n            )}\n          >\n            <ModalContextProvider onClose={onClose}>\n              {children}\n            </ModalContextProvider>\n          </article>\n        </div>,\n        document.body,\n      )\n    ) : (\n      <></>\n    );\n  },\n  {\n    Header: ModalHeader,\n  },\n);\n"],"names":["ModalHeader","closeButton","className","children","restHeaderProps","onClose","useModalContext","jsxs","cleanClassName","styles","jsx","Button","X","Modal","zIndex","blurredBackground","opened","backgroundScroll","fixedDarkMode","restArticleProps","openingTransition","useModalClosing","usePreventBackgroundScroll","isDarkMode","useDarkMode","createPortal","MODAL_CLOSING_STATE","ModalContextProvider","Fragment"],"mappings":"qkDAaOA,EAAA,CAAA,CAAqB,YAAAC,EAAA,GAEZ,UAAAC,EAGd,SAAAC,EACA,GAAAC,CAEF,IAAA,CACE,KAAA,CAAA,QAAAC,GAAAC,IAEA,OAAAC,EAAA,KACE,SAAC,CAAA,GAAAH,EACK,UAAAI,EAAA,GAAAC,EAAA,MAAA,IAAAP,CAAA,EAAA,EACqD,SAAA,CAEzDQ,MAAA,MAAA,CAAA,SAAAP,EAAA,EAAeF,EAAAS,EAAA,IAAAC,EAAA,CAAA,KAAA,QAAA,MAAA,QAAA,QAAAN,EAAA,KAAAK,EAAA,IAAAE,EAAA,CAAA,CAAA,CAAA,CAAA,EAAA,IAGX,CAAA,CAAA,CAGV,81CCROC,EAAA,OAAA,OAAqB,CAAA,CACzB,OAAAC,EAAA,IAEU,kBAAAC,EAAA,GACW,OAAAC,EAAA,GACX,QAAAX,EACT,iBAAAY,EAAA,GACmB,cAAAC,EACnB,UAAAhB,EAGA,SAAAC,EACA,GAAAgB,CACG,IAAA,CAEH,MAAAC,EAAAC,EAAA,CAA0C,OAAAL,EACxC,gBAAA,GACiB,CAAA,EAGnBM,EAAA,CAA2B,iBAAAL,EACzB,UAAA,CAAA,CAAAG,CACa,CAAA,EAGf,KAAA,CAAA,WAAAG,CAAA,EAAAC,EAAAN,CAAA,EAEA,OAAAE,EAAAK,EAAA,aACElB,EAAA,KACE,MAAC,CAAA,MAAA,CACQ,OAAAO,CACL,EACF,UAAAN,EACW,GAAAC,EAAA,iBAAA,CAAA,IAAAW,IAAAM,EAAA,SAAAjB,EAAA,OAAA,EAIT,EACF,SAAA,CAEAC,EAAA,IAAA,MAAC,CAAA,UAAAF,EACY,GAAAC,EAAA,kBAAA,CAAA,IAAAM,GAAAN,EAAA,OAAA,EAGT,EACF,QAAAJ,CACS,CAAA,EACXK,EAAA,IACA,UAAC,CAAA,GAAAS,EACK,UAAAX,EACO,GAAAC,EAAA,KAAA,IAAAc,GAAAd,EAAA,IAAA,IAAAP,CAAA,EACgD,EAC3D,SAAAQ,EAAAA,IAAAiB,EAAA,CAAA,QAAAtB,EAAA,SAAAF,CAAA,CAAA,CAIA,CAAA,CACF,CAAA,CAAA,EACF,SAAA,IACS,EAAAO,EAAA,IAAAkB,WAAA,CAAA,CAAA,CAGT,EAEN,CACA,OAAA5B,CACU,CAEZ;;;;;;;;;;;;;;;;;;;"}